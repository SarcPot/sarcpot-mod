SMODS.Joker {

    discovered = true,
    key = 'thief_dice',

    config = {
        extra = {
            n = 1,
            d = 6,
            steal_value = 2,
            money_mult = 3
        }
    },
    loc_vars = function(self, info_queue, card)
        local n, d = SMODS.get_probability_vars(card, card.ability.extra.n, card.ability.extra.d, 'thief_dice')
        return {
            vars = {n, d, card.ability.extra.steal_value, card.ability.extra.money_mult}
        }
    end,
    rarity = 1,
    atlas = 'sarcpot_atlas',
    pos = {
        x = 1,
        y = 2
    },
    cost = 3,

    calculate = function(self, card, context)
        if context.setting_blind then
            ease_dollars(-card.ability.extra.steal_value)
            card.sell_cost = card.sell_cost + card.ability.extra.steal_value
            G.E_MANAGER:add_event(Event({
                trigger = 'after',
                delay = 0.1,
                func = function()
                    card:juice_up(0.3, 0.4)

                    return true
                end
            }))
            return {
                message = localize('sarc_yoink'),
                colour = G.C.GREEN
            }

        end
        if context.end_of_round and context.cardarea == G.jokers then
            if SMODS.pseudorandom_probability(card, 'thief_dice_consumable', card.ability.extra.n, card.ability.extra.d,
                'thief_dice') then
                ease_dollars(card.sell_cost * card.ability.extra.money_mult)

                G.E_MANAGER:add_event(Event({
                    trigger = 'after',
                    delay = 0.7,
                    func = function()
                        play_sound('tarot1')
                        card.T.r = -0.2
                        card:juice_up(0.3, 0.4)
                        card.states.drag.is = true
                        card.children.center.pinch.x = true
                        card:start_dissolve()
                        card = nil
                        return true
                    end
                }))
                return {
                    message = "$" .. card.sell_cost * card.ability.extra.money_mult,
                    colour = G.C.FILTER
                }
            end
        end
    end

}
